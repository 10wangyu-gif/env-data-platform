version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: env-mysql-prod
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_DATABASE: env_data_platform
      MYSQL_USER: env_user
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    ports:
      - "127.0.0.1:3306:3306"
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - ./config/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./config/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb-buffer-pool-size=1G
      --max-connections=500
      --slow-query-log=1
      --long-query-time=2
      --innodb-flush-log-at-trx-commit=2
      --sync-binlog=0
    secrets:
      - mysql_root_password
      - mysql_password
    networks:
      - env-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$(cat /run/secrets/mysql_root_password)"]
      timeout: 20s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: env-redis-prod
    restart: always
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data_prod:/data
      - ./config/redis/redis.prod.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass $$(cat /run/secrets/redis_password)
    secrets:
      - redis_password
    networks:
      - env-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$$(cat /run/secrets/redis_password)", "ping"]
      timeout: 3s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # 主应用程序
  app:
    image: env-data-platform:latest
    container_name: env-data-platform-prod
    restart: always
    ports:
      - "127.0.0.1:8080:8080"
    environment:
      # 应用配置
      ENV: production
      CONFIG_PATH: /app/config/config.prod.yaml

      # 数据库配置
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: env_data_platform
      DB_USERNAME: env_user

      # Redis配置
      REDIS_HOST: redis
      REDIS_PORT: 6379

      # 日志配置
      LOG_LEVEL: info
      LOG_FORMAT: json
      LOG_OUTPUT: file

      # JWT配置
      JWT_EXPIRE: 8h
    volumes:
      - ./config:/app/config:ro
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./temp:/app/temp
      - /etc/localtime:/etc/localtime:ro
    secrets:
      - mysql_password
      - redis_password
      - jwt_secret
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - env-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: env-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/ssl:/etc/nginx/ssl:ro
      - ./static:/usr/share/nginx/html/static:ro
    depends_on:
      - app
    networks:
      - env-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'

  # Prometheus监控
  prometheus:
    image: prom/prometheus:latest
    container_name: env-prometheus-prod
    restart: always
    ports:
      - "127.0.0.1:9090:9090"
    volumes:
      - ./config/prometheus/prometheus.prod.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data_prod:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - env-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Grafana可视化
  grafana:
    image: grafana/grafana:latest
    container_name: env-grafana-prod
    restart: always
    ports:
      - "127.0.0.1:3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD__FILE: /run/secrets/grafana_admin_password
      GF_USERS_ALLOW_SIGN_UP: false
      GF_ANALYTICS_REPORTING_ENABLED: false
      GF_ANALYTICS_CHECK_FOR_UPDATES: false
      GF_SECURITY_DISABLE_GRAVATAR: true
    volumes:
      - grafana_data_prod:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning:ro
    secrets:
      - grafana_admin_password
    networks:
      - env-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

secrets:
  mysql_root_password:
    file: ./secrets/mysql_root_password.txt
  mysql_password:
    file: ./secrets/mysql_password.txt
  redis_password:
    file: ./secrets/redis_password.txt
  jwt_secret:
    file: ./secrets/jwt_secret.txt
  grafana_admin_password:
    file: ./secrets/grafana_admin_password.txt

volumes:
  mysql_data_prod:
    driver: local
  redis_data_prod:
    driver: local
  prometheus_data_prod:
    driver: local
  grafana_data_prod:
    driver: local

networks:
  env-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16