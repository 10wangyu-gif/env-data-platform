version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: env-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: Env@2024#Secure
      MYSQL_DATABASE: env_data_platform
      MYSQL_CHARACTER_SET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - env-network

  redis:
    image: redis:7-alpine
    container_name: env-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - env-network
    command: redis-server --appendonly yes

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: env-app
    restart: always
    depends_on:
      - mysql
      - redis
    environment:
      ENV_CONFIG_FILE: /app/config/config.prod.yaml
      GIN_MODE: release
    ports:
      - "8888:8888"    # HTTP服务端口
      - "8212:8212"    # HJ212协议端口
      - "9090:9090"    # Prometheus metrics端口
    volumes:
      - ./config/config.prod.yaml:/app/config/config.prod.yaml:ro
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./temp:/app/temp
    networks:
      - env-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: env-nginx
    restart: always
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites:/etc/nginx/sites-available:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./static:/usr/share/nginx/html/static:ro
    networks:
      - env-network

networks:
  env-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local